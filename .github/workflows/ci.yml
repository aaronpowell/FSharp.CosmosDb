name: CI build

env:
  OUTPUT_PATH: ${{ github.workspace }}/.nupkg
  DOTNET_VERSION: "6.0.x"
  GITHUB_SOURCE: "https://nuget.pkg.github.com/aaronpowell/index.json"
  CONFIGURATION: "Debug"

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: mcr.microsoft.com/cosmosdb/linux/azure-cosmos-emulator:latest
        env:
          AZURE_COSMOS_EMULATOR_PARTITION_COUNT: 10
          AZURE_COSMOS_EMULATOR_ENABLE_DATA_PERSISTENCE: "true"
    env:
      COSMOS_ENDPOINT: "https://localhost:8081"
      COSMOS_KEY: "C2y6yDjf5/R+ob0N8A7Cgv30VRDJIWEHLM+4QDU5DE2nQ9nDuVTqobD4b8mGGyPMbIZnqyMsEcaGQy67XIw/Jw=="

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Dotnet ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dotnet tools
        run: dotnet tool restore

      - name: Generate packages
        run: dotnet fake run ./build.fsx --target CI

      - name: Publish release packages
        uses: actions/upload-artifact@v3
        with:
          name: packages
          path: ${{ env.OUTPUT_PATH }}

  publish-github:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/download-artifact@v3
        with:
          name: packages
          path: ${{ env.OUTPUT_PATH }}

      - name: Setup .NET Core ${{ env.DOTNET_VERSION }}
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Publish
        run: dotnet nuget push --api-key ${{ secrets.GITHUB_TOKEN }} --source ${{ env.GITHUB_SOURCE }} "FSharp.CosmosDB*.nupkg"
        working-directory: ${{ env.OUTPUT_PATH }}
