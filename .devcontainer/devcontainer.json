{
  "name": "FSharp.CosmosDB",
  "dockerComposeFile": "docker-compose.yml",
  "service": "app",
  "workspaceFolder": "/workspace",

  // Use this environment variable if you need to bind mount your local source code into a new container.
  "remoteEnv": {
    "LOCAL_WORKSPACE_FOLDER": "${localWorkspaceFolder}",
    "NODE_EXTRA_CA_CERTS": "/usr/local/share/ca-certificates/emulator.crt",
    "ASPNETCORE_ENVIRONMENT": "Development"
  },

  "settings": {
    "terminal.integrated.defaultProfile.linux": "zsh"
  },

  // Add the IDs of extensions you want installed when the container is created.
  "extensions": [
    "Ionide.Ionide-fsharp",
    "ms-dotnettools.csharp",
    "ms-vscode.azure-account",
    "ionide.ionide-fake",
    "ionide.ionide-paket",
    "github.vscode-pull-request-github",
    "paolodellepiane.fantomas-fmt",
    "ms-azuretools.vscode-cosmosdb",
    "ms-azuretools.vscode-docker"
  ],

  // Use 'forwardPorts' to make a list of ports inside the container available locally.
  // "forwardPorts": [],

  // Use 'postCreateCommand' to run commands after the container is created.
  "postCreateCommand": "./.devcontainer/start.sh && dotnet tool restore && dotnet restore",

  // Comment out connect as root instead. More info: https://aka.ms/vscode-remote/containers/non-root.
  "remoteUser": "vscode"
}
